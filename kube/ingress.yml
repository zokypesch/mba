apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: goexampleingress
  namespace: staging
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
#    kubernetes.io/ingress.class: "nginx"
spec:
  backend:
    serviceName: goexample
    servicePort: 80
# spec:
#   rules:
#   # - host: myhost.com
#   - http:
#       paths:
#       - path: /
#         backend:
#           serviceName: goexample
#           servicePort: 80
      # - path: /bar
      #   backend:
      #     serviceName: service2
      #     servicePort: 8080

# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   annotations:
    # ingress.kubernetes.io/backends: '{"k8s-be-31117--c886634cea3a08a2":"HEALTHY"}'
    # ingress.kubernetes.io/forwarding-rule: k8s-fw-production-rubay--c886634cea3a08a2
    # ingress.kubernetes.io/https-forwarding-rule: k8s-fws-production-rubay--c886634cea3a08a2
    # ingress.kubernetes.io/https-target-proxy: k8s-tps-production-rubay--c886634cea3a08a2
    # ingress.kubernetes.io/ssl-cert: k8s-ssl-1a291c17e28e685f-b706385eac85927a--c886634cea3a08a2
    # ingress.kubernetes.io/static-ip: k8s-fw-production-rubay--c886634cea3a08a2
    # ingress.kubernetes.io/target-proxy: k8s-tp-production-rubay--c886634cea3a08a2
    # ingress.kubernetes.io/url-map: k8s-um-production-rubay--c886634cea3a08a2
  # creationTimestamp: "2018-10-10T05:27:40Z"
  # generation: 1
  # name: goexample
  # namespace: staging
  # resourceVersion: "66833491"
  # selfLink: /apis/extensions/v1beta1/namespaces/production/ingresses/rubay
  # uid: 34a54378-cc4d-11e8-9fd5-42010a94015f
# spec:
#   backend:
#     serviceName: goexample
#     servicePort: 8080
#   tls:
#   - secretName: ruangguru-com-ssl
# status:
#   loadBalancer:
#     ingress:
#     - ip: 35.241.2.160

# when you apply a ingress it takes 5 - 10 minute
